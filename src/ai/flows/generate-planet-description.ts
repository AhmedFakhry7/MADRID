'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating a detailed description of a planet.
 *
 * The flow takes the planet's name as input and returns a description generated by an AI model.
 *
 * @fileOverview
 * - `generatePlanetDescription`: The main function to generate planet descriptions.
 * - `GeneratePlanetDescriptionInput`: Input type for the function, including the planet name.
 * - `GeneratePlanetDescriptionOutput`: Output type, containing the generated description.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GeneratePlanetDescriptionInputSchema = z.object({
  planetName: z.string().describe('The name of the planet to describe.'),
});
export type GeneratePlanetDescriptionInput = z.infer<
  typeof GeneratePlanetDescriptionInputSchema
>;

const GeneratePlanetDescriptionOutputSchema = z.object({
  description: z.string().describe('A detailed description of the planet.'),
});
export type GeneratePlanetDescriptionOutput = z.infer<
  typeof GeneratePlanetDescriptionOutputSchema
>;

export async function generatePlanetDescription(
  input: GeneratePlanetDescriptionInput
): Promise<GeneratePlanetDescriptionOutput> {
  return generatePlanetDescriptionFlow(input);
}

const planetDescriptionPrompt = ai.definePrompt({
  name: 'planetDescriptionPrompt',
  input: {schema: GeneratePlanetDescriptionInputSchema},
  output: {schema: GeneratePlanetDescriptionOutputSchema},
  prompt: `Generate a detailed and engaging description of the planet {{planetName}}. Include interesting facts and information.`, // Changed to Handlebars syntax
});

const generatePlanetDescriptionFlow = ai.defineFlow(
  {
    name: 'generatePlanetDescriptionFlow',
    inputSchema: GeneratePlanetDescriptionInputSchema,
    outputSchema: GeneratePlanetDescriptionOutputSchema,
  },
  async input => {
    const {output} = await planetDescriptionPrompt(input);
    return output!;
  }
);
